@using EgyptTouristWebSite.ViewModel
@using Newtonsoft.Json
@model ServicesViewModel


    <div class="p-5 bg-light" style="display:flex">
        <div class="p-5 bg-light">
            <h1 class="mb-3">Services</h1>
            <h4 class="mb-3">I am Looking for ..</h4>
        </div>
        
        <div class="list-group" style="width:100%">
            <a href="#Bank-slider" class="list-group-item list-group-item-action">Bank</a>
            <a href="#Embassy-slider" class="list-group-item list-group-item-action">Embassy</a>
            <a href="#Mall-slider" class="list-group-item list-group-item-action">Mall</a>
            <a href="#Restaurant-slider" class="list-group-item list-group-item-action">Restaurant</a>
        </div>
    </div>
    <partial name="MapPartialView" model="Model" />
<script>

    var servicesModel = @Html.Raw(JsonConvert.SerializeObject(Model));
    var services =servicesModel.services;
    map.addLayer(creatFeatures(services[0], "placeholder.png", "Bank"));
    map.addLayer(creatFeatures(services[1], "orange.png", "Embassy"));
    map.addLayer(creatFeatures(services[2], "blue.png", "Mall"));
   map.addLayer(creatFeatures(services[3], "green.png", "Restaurant"));
    creatLayerListHandelCheckBox(map);

</script>
@functions {
    public static bool IsChecked(string[] values, string targetValue)
    {
        return values != null && values.Contains(targetValue);
    }
}





@foreach (var serviceList in Model.services)
{
    <div class="container" id="@serviceList[0].Type.Type-slider">
        <h2>@serviceList[0].Type.Type</h2>
        <div class="slider-container">
            <div class="slider" >
                @foreach (var service in serviceList)
                {
                                                                        <div class="wrapper">
                                    <div class="card_s">
                                                        <img src="/Images/@service.Image" alt="" srcset="">
                                        <div class="descriptions">
                                                            <h3 class="">@service.Name</h3>
                                            <p>
                                    @service.Description   </p>
                                                        <div class="rating">
                                    @for (int i = 0; i < service.Rate; i++)
                                    {
                                                            <span class="fa fa-star checked" style="color:gold"></span>
                                    }
                                    @for (int i = service.Rate; i < 5; i++)
                                    {
                                                            <span class="fa fa-star"></span>
                                    }
                                            </div>
                                                <button>
                                                        <a href="@Url.Action("Details", "Service", new { id = service.Id })">Readmore</a>
                                            </button>
                                        </div>
                                    </div>
                                </div>




                    
                }
            </div>
            <div class="slider-controls">
                <button class="slider-btn slider-prev-btn" data-slider="#@serviceList[0].Type.Type-slider"><i class="fas fa-chevron-left"></i></button>
                <button class="slider-btn slider-next-btn" data-slider="#@serviceList[0].Type.Type-slider"><i class="fas fa-chevron-right"></i></button>
            </div>
        </div>
        <button class="btn btn-primary" onclick="location.href='@Url.Action("ShowservicesByCategory", "Service", new { category = @serviceList[0].Type.Type })'">View All</button>
    </div>
}

@section Scripts{
    <style>
            <style>
         .slider-container {

    /*        position: relative;
    */
        }

        .slider {
            overflow-x: scroll;


                white-space: nowrap;

    /*        transition: 0.5s ease-in-out;
    */ 
        }

            .slider::-webkit-scrollbar {
                display: none; /* Add this to remove the scroll bar */
            }

           /* .slider .card {
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
                transition: 0.3s;
                border-radius: 5px;
                width: 250px;
                margin: 10px;
                display: inline-block;
            }

                .slider .card:hover {
                    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
                }

                .slider .card img {
                    border-radius: 5px 5px 0 0;
                    width: 100%;
                    height: 150px;
                    object-fit: cover;
                }

                .slider .card .card-body {
                    padding: 10px;
                }*/

        .slider-controls {
            display: block;
            width: 100%;
            display: flex;
            justify-content: space-between;
            z-index: 5;
        }

        .slider-btn {
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            transition: color 0.3s;
        }

            .slider-btn:hover {
                color: #ccc;
            }

        .slider-prev-btn {
            color: gold;
            margin-left: 10px;
        }

        .slider-next-btn {
            color: gold;
            margin-right: 10px;
        }







    .wrapper{
    /*    position: absolute;
        top:50%;
        left:50%;*/
    /*    transform: translate(-50%, -50%);
    */   
    width:430px;

    /*    max-width: 350px;
        height:auto;*/

       /* display: flex;
        flex-wrap: wrap;
        justify-content: space-between;*/

           display: inline-block;  /*test/**/

    }
    .card_s{
       /* flex: 1;
        flex-basis: 300px;
        flex-grow: 0;*/
        height: 400px;
        background: #fff;
        border: 2px solid #fff;
        box-shadow: 0px 4px 7px rgba(0,0,0,.5);
        cursor: pointer;
        transition: all .5s cubic-bezier(.8,.5,.2,1.4);
        overflow: hidden;

        position: relative;


    }

    .card_s img{
        width: 100%;
        height:100%;
        transition: all .5s cubic-bezier(.8,.5,.2,1.4);
    }
    .descriptions{

        position: absolute;

        top:0px;
        left:0px;

        background-color: rgba(255,255,255,.7);
        width:100%;
        height:100%;
        transition: all .7s ease-in-out;
        padding: 20px;
        box-sizing: border-box;
        clip-path: circle(0% at 100% 100%);
        white-space: normal;

    }
    .card_s:hover .descriptions{
        left:0px;
        transition: all .7s ease-in-out;
        clip-path: circle(75%);
    }
    .card_s:hover{
        transition: all .5s cubic-bezier(.8,.5,.2,1.4);
        box-shadow: 0px 2px 3px rgba(0,0,0,.3);
        transform: scale(.97);
    }
    .card_s:hover img{
        transition: all .5s cubic-bezier(.8,.5,.2,1.4);
        transform: scale(1.6) rotate(20deg);
        filter: blur(3px);
    }
    .card_s h3{
        color: #ff3838;
        letter-spacing: 1px;
        margin: 0px;
    }
    .card_s p{

        line-height: 24px;
        height: 180px;
        overflow-y: clip;
    }
    .card_s pr{

        display:block;
    }
    .card_s button{
        width: fit-content;
        height: 40px;
        cursor: pointer;
        border-style: none;
        background-color: #ff3838;
        color:#fff;
        font-size: 15px;
        outline: none;
        box-shadow: 0px 2px 3px rgba(0,0,0,.4);
        transition: all .5s ease-in-out;
    }
    .card_s button:hover{
        transform: scale(.95) translateX(-5px);
        transition: all .5s ease-in-out;
    }



        /*.form-group{
            display:flex;
        }*/
    </style>

    </style>

    <script>
        const sliders = document.querySelectorAll('.slider');

        sliders.forEach(slider => {
            const prevBtn = slider.parentElement.querySelector('.slider-prev-btn');
            const nextBtn = slider.parentElement.querySelector('.slider-next-btn');

            let scrollAmount = 0;
            const cardWidth = slider.querySelector('.card_s').offsetWidth + 20;
            const cardsDisplayed = Math.floor(slider.offsetWidth / cardWidth);
                const totalCards = slider.querySelectorAll('.card_s').length;

            // Show prev and next buttons only if more cards than displayed
            if (totalCards > cardsDisplayed) {
                prevBtn.style.display = 'block';
                nextBtn.style.display = 'block';
            } else {
                prevBtn.style.display = 'none';
                nextBtn.style.display = 'none';
            }

            // Prev and next butns functionality
            prevBtn.addEventListener('click', () => {
                if (scrollAmount !== 0) {
                    scrollAmount += cardWidth;
                    slider.scrollBy({ left: `-${cardWidth}`, behavior: "smooth" });
                }
            });

            nextBtn.addEventListener('click', () => {
                if (scrollAmount !== (slider.scrollWidth - slider.offsetWidth)) {
                    scrollAmount += cardWidth;
                    slider.scrollBy({ left: `${cardWidth}`, behavior: "smooth" });
                    console.log(cardWidth);
                }
            });

            slider.addEventListener('scroll', () => {
                scrollAmount = slider.scrollLeft;
            });
        });
    </script>
}